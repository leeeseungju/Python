# -*- coding: utf-8 -*-
"""0407본인만의 이미지 수집_및 합성곱신경망 개발하기_퀴즈용_이승주.ipynb의 사본

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tsjqcLSaPMUqC7RQ1IqcYiCmzTZwkBKZ

# 1. 이미지 수집
"""

!pip install bing-image-downloader==1.1.2

from datetime import datetime

# bing_image_downloader라는 라이브러리를 이용하면 bing에서 검색한 결과에 나오는 이미지들을 다운로드할 수 있다.
# !pip install bing-image-downloader==1.1.2
# os.environ['PYTHONIOENCODING'] = 'utf-8'
import os
import shutil
import random
import bing_image_downloader
from bing_image_downloader import downloader

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount("/content/gdrive")
# %cd /content/gdrive/MyDrive/Colab Notebooks/fintech_edu_2025/퀴즈

currentDate = datetime.now()

dateKey = currentDate.strftime("%Y%m%d")

directory_path = f"/content/downimg_{dateKey}"

query = "화난 표정"
imageCnt = 30
timeoutStd = 10
# limit에 원하는 이미지 개수를 입력
downloader.download(query,
                    limit=imageCnt,
                    output_dir=directory_path,
                    adult_filter_off=True,
                    force_replace=False,
                    timeout=timeoutStd)

query = "행복한 표정"
imageCnt = 30
timeoutStd = 10
# limit에 원하는 이미지 개수를 입력
downloader.download(query,
                    limit=imageCnt,
                    output_dir=directory_path,
                    adult_filter_off=True,
                    force_replace=False,
                    timeout=timeoutStd)

"""# 2. 이미지 불러오기"""

import numpy as np
import os
import cv2
# from sklearn.model_selection import train_test_split

print(f"저장된 폴더 명: {directory_path}")

categoryPath = os.listdir(directory_path)[0]
categoryPath

categoryPath = os.listdir(directory_path)[1]
categoryPath

catPath = os.path.join( directory_path, categoryPath )

imagesPath = os.listdir(catPath)[0]
imagesPath

imgeFullPath = os.path.join( directory_path, categoryPath, imagesPath )
imgeFullPath

"""### 이미지 불러오기 힌트"""

### 이미지 불러러오는 방법 (그레이스케일로)
inImg = cv2.imread( imgeFullPath, cv2.IMREAD_GRAYSCALE )
inImg

### 이미지 사이즈 변경 방법 (200 * 200 )
IMG_SIZE = 200
resizedImg = cv2.resize( inImg, (IMG_SIZE, IMG_SIZE) )
resizedImg

"""### 문제 이미지를 모두 불러와서
### 불러온 이미지는 trainImgList 에 저장
### 이미지의 정답지 폴더명은 (예: "행복한_표정") 은 trainLabelList에 저장
"""

trainImgList = []
trainLabelList = []

# trainImgList.append( resizedImg )
# trainLabelList.append( categoryPath )

trainLabelList

IMG_SIZE = 200
# 최상위 폴더 경로 설정
directory_path = '/content/downimg_20250407'

for category in os.listdir(directory_path):  # downimg_20250407 내 폴더 하나씩 꺼내기
    catPath = os.path.join(directory_path, categoryPath) # os.path.join으로 여러 개의 경로 연결이 가능함, 단순 문자열 조합이 아닌 하나의 경로가 됨

    for imageFile in os.listdir(catPath):  # 폴더 안에 있는 이미지 파일 하나씩 꺼내기
        imagesPath = os.path.join(catPath, imageFile) # 위와 마찬가지로 os.path.join으로 하나의 경로 연결

        try:
            inImg = cv2.imread(imgeFullPath, cv2.IMREAD_GRAYSCALE) # 이미지 읽기
            resizedImg = cv2.resize(inImg, (IMG_SIZE, IMG_SIZE)) # 사이즈 변경

            trainImgList.append(resizedImg)  # 이미지를 리스트에 추가
            trainLabelList.append(category)  # 폴더명(카테고리)를 라벨 리스트에 추가하기

            print(f"{inImg}, {category}") # 처리한 이미지 출력 (이미지, 카테고리명)

        except Exception as e: # 에러 발생시
            print(e) # 에러 문구 실행
            continue

len(trainImgList) # 이미지 총 개수 확인