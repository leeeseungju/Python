# -*- coding: utf-8 -*-
"""json 파일 수집형_퀴즈_0412_이승주.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a9jSoVLYjyE-aY87jfoSvCPfKziS5o3z
"""

### dataset 폴더 내 TL_multiple_choice.json

!pip install datasets==2.21.0

import requests
import json
import pandas as pd
from datasets import Dataset
import huggingface_hub

"""### JSON 형태의 행정 문서 대상 기계독해 데이터 (출처: AI허브 -> 한국어/텍스트 조회 -> "한국어 지식기반 관계데이터")"""

url = "https://drive.google.com/uc?export=download&id=1JehPjKhyw9NlVdoKBv7ZtxZLqaEjN7H9"
response = requests.get(url)

original_data = json.loads(response.text)
print(original_data)

# 원본데이터의 키 확인하기
original_data.keys()

len( original_data["data"] )

datas = original_data["data"]

"""### 아래코드를 활용하여 필요 데이터를 alpaca 포맷 (instruction, input, ouput) 형태로 수집하세요"""

# 각 데이터를 하나씩 끊어서 보기
eachData = datas[0]

# 하나의 데이터 셋 내 주요 파라그래프 키 확인하기
eachData.keys()

# 하나의 데이터 셋 필요 파라그래프 하나씩 끊어서 보기 # 어려우면 여기 반복문은 돌리지 말기
eachParagraphs = eachData["paragraphs"][0]

# 딕셔너리 구조의 키 확인하기
eachParagraphs.keys()

# 딕셔너리 구조의 키 중 주요 정보 키값으로 가져오기
qasData = eachParagraphs["qas"]

# 하나의 Q&A 질의문 끊어서 보기
eachQas = qasData[0]

# 보물1: 질문
eachQas["question"]

# 보물2: 제시문1
eachQas["answers"]["clue_text"]

# 보물3: 제시문2
eachQas["answers"]["options"]

# 보물4: 정답
eachQas["answers"]["text"]

### 다 풀고나면? 아래와 같이 정리되면 됨
### instrunction : 보물1 (질문)
### input        : 보물2 (제시문1) + \n options \n + 보물3 (제시문2)
### output       : 보물4 (정답)

### 아래는 참고용 코드 (허깅페이스에 LLM 파인튜닝용 데이터 셋 저장)

# # Dataset 형태로 변환
# dataset = Dataset.from_pandas(df)

# # 허깅페이스 로그인 ( https://huggingface.co/ 회원가입 후 DATASET 하나 추가 이후 API 키 생성)
# huggingface_hub.login()

# # 허깅페이스에 업로드 ( 본인의 데이터셋 생성한 주소를 적어야함)
# dataset.push_to_hub("hyokwan/common")







alpaca_data = []

# for문을 사용하여 오리지널 데이터에서 data 하나씩 찾기
for eachData in original_data["data"]:
    # 각 문서에서 paragraphs 찾기
    for eachParagraphs in eachData["paragraphs"]:
        context = eachParagraphs["context"]
        # 문단 안에 포함된 question, clue_text, options, answer 찾기
        for eachQas in eachParagraphs["qas"]:
            # question 추출하기
            question = eachQas["question"]
            # clue, option 추출하기
            clue_text = eachQas["answers"]["clue_text"]
            options = eachQas["answers"]["options"]
            # answer 추출하기
            answer = eachQas["answers"]["text"]

            # 줄바꿈 옵션
            formatted_options = "\n".join(options)

            # clue_text + option 붙이기... 교수님 예시 참고
            clue_option = clue_text + "\n\noptions\n" + formatted_options

            # Alpaca 포맷 구성하기
            alpaca_data.append({
                "instruction": question, # 질문
                "input": clue_option, # 보기 + 본문
                "output": answer # 정답
            })

# 리스트를 데이터 프레임으로 변환
df = pd.DataFrame(alpaca_data)

print(df)
print(f"총 변환된 문항 수: {len(df)}")

pd.DataFrame( alpaca_data )